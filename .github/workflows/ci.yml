name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  Format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Check rustfmt
        run: nix develop --command ci-check-rustfmt

  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Run tests
        run: nix develop --command ci-test-rust
        # run: nix develop -c -- cargo test -- --include-ignored

  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      # Runs clippy as part of the preBuild.
      - name: Build riff
        run: nix build .#packages.x86_64-linux.riff -L
      - name: Build riffStatic
        run: nix build .#packages.x86_64-linux.riffStatic -L
      - name: Create artifact for riffStatic
        uses: actions/upload-artifact@v3
        with:
          name: riff-x86_64-linux
          path: |
            result/bin/riff

  RiffShell:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download prebuilt riff
        uses: actions/download-artifact@v3
        with:
          name: riff-x86_64-linux
      - name: Run `riff --help`
        run: |
          chmod +x riff
          ./riff --help

  Spelling:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Check Spelling
        run: nix develop --command ci-check-spelling

  NixFormatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Check nixpkgs-fmt formatting
        run: nix develop --command ci-check-nixpkgs-fmt

  RegistryFormatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Check registry.json formatting
        run: nix develop --command ci-check-registry-format

  EditorConfig:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Check EditorConfig conformance
        run: nix develop --command ci-check-editorconfig
